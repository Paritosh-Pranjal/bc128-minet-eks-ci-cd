name: Backend CI/CD
run-name: Backend deployment  triggered by ${{ github.actor }}

on:
  push:
    branches:
      - deployment
    paths:
      - ".github/workflows/backendDeploy.yml"
      - "backend/**"

jobs:
  backendFoldersChanged:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    defaults:
      run:
        working-directory: backend

    outputs:
      changed-services: ${{ steps.set-output.outputs.changed-services }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v37

      - name: Determine changed services
        id: set-output
        run: |
          changed_services=()
          services=("api-gateway" "crypto-service" "portfolio-service" "service-registry" "user-service" "wallet-service")  
          backend_workflow_changed=false
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
              path=$(echo "$file" | cut -d'/' -f3)
              if [[ "backendDeploy.yml" == $path ]]; then
                  echo "All Services: ${services[@]}"
                  changed_services=("${services[@]}")
                  backend_workflow_changed=true
                  break
              fi
          done

          if [[ $backend_workflow_changed == false ]]; then
              for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
                  path=$(echo "$file" | cut -d'/' -f2)
                  already_exists=false
                  for changed in "${changed_services[@]}"; do
                      if [[ $changed == $path ]]; then
                          already_exists=true
                          break
                      fi
                  done
                  if [[ $already_exists == false ]]; then
                      for service in "${services[@]}"; do
                          if [[ $service == $path ]]; then
                              changed_services+=("$path")
                              break
                          fi
                      done  
                  fi
              done
          fi

          json_array="[\"${changed_services[0]}\""
          for i in "${changed_services[@]:1}"; do
              json_array+=",\"$i\""
          done
          json_array+="]"

          echo "::set-output name=changed-services::$json_array"
          echo "Changed services normal: ${changed_services[*]}"

  build:
    name: Backend Build
    needs: backendFoldersChanged
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        services: ${{fromJson(needs.backendFoldersChanged.outputs.changed-services)}}
    defaults:
      run:
        working-directory: backend/${{ matrix.services }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: "corretto"
          java-version: "17"

      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ matrix.services }}-${{ hashFiles(join(matrix.services, '/**/pom.xml')) }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.BC128_DEMO_PAT }}

      - name: Build and Push the docker image to ghcr
        uses: docker/build-push-action@v4
        with:
          context: backend/${{ matrix.services }}
          push: true
          tags: ghcr.io/${{ secrets.GHCR_USERNAME }}/bc128-be-eks-${{ matrix.services }}:v${{ github.run_number }}

      - name: configure aws
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:  ${{secrets.AWS_EKS_REGION}}
    
      - name: adding eks-cluster
        run: aws eks update-kubeconfig --name ${{ secrets.CLUSTER_NAME }} --region ${{secrets.AWS_EKS_REGION}}

      - name: Deploy the service on EKS
        run: |
          kubectl set image deployment/be-${{ matrix.services }}-deployment bc128-backend-${{ matrix.services }}=ghcr.io/${{ secrets.GHCR_USERNAME }}/bc128-be-eks-${{ matrix.services }}:v${{ github.run_number }}